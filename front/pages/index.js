import Head from 'next/head'
import styles from '../styles/Home.module.css'
import { getAll } from '../lib/api'
import Gazou from '../components/gazou'
import Modal from '../components/modal'
import { useEffect, useState } from 'react'

function buildImageSrc(src) {
    const IMAGE_API = process.env.NEXT_PUBLIC_IMAGE_API
  return IMAGE_API + "?path=" + encodeURIComponent(src)
}

async function fetchList(page) {
    const API_ENDPOINT = process.env.NEXT_PUBLIC_API_ENDPOINT
    const query_params = new URLSearchParams({page})
    const res = await fetch(API_ENDPOINT + "/sankaku?" + query_params, {
      method: 'GET',
    })
    const json = await res.json()
    if (json.errors) {
      throw new Error('Failed to fetch API')
    }
    return json
}

export default function Home() {
  const loadingFigure = {type: "loading", href: "", src: ""}
  const [loaded, setLoaded] = useState(false)
  const [requesting, setRequesting] = useState(false)
  const [page, setPage] = useState(0)
  const [showModal, setShowModal] = useState(false)
  const [pickUpPost, setPickUpPost] = useState({})
  const [posts, setPosts] = useState([])

  async function fetchCore(page, type) {
    const json = await fetchList(page)
    return json.body.map((post) => {
        post.src = buildImageSrc(post.src)
        post.type = type
        return post
    })
  }
  async function nextFetch(page) {
    return fetchCore(page, "loading")
  }
  
  const next = async () => {
    setRequesting(true)
    setPosts([...posts, ...[...Array(10)].map(() => loadingFigure)])
    const newPosts = await nextFetch(page + 1)

    const concatenated = [...posts, ...newPosts]
    concatenated.forEach((v,  idx) => {
      if (v.type === "loaded") return
      const img = new Image()
      img.src = v.src
      img.onload = () => {
        setPosts(posts => {
          const copy = posts.slice()
          copy.splice(idx, 1, {...v, type: "loaded"})
          console.log(copy)
          return copy
        })
      }
    });
    setPosts(concatenated)
    setPage(page + 1)
    setRequesting(false)
  }
  useEffect(async () => {
    if (!loaded) {
      setLoaded(true)
      await next()
    }
  })

  function openModal(e, post) {
    e.stopPropagation()
    e.preventDefault()
    setShowModal(true)
    setPickUpPost(post)
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        {posts.map((post, idx) => {
          return (
            <Gazou
              key={`${idx}${post.href}`}
              type={post.type}
              href={post.href}
              src={post.src}
              handleClick={e => {
                openModal(e, post)
              }}
            />
          )
        })}
        {showModal && (
          <Modal
            handleClose={() => {
              setShowModal(false)
              setPickUpPost(undefined)
            }}
          >
            {pickUpPost && (
              /* eslint-disable */
                <img src={pickUpPost.src}/>
              /* eslint-enable */
            )}
          </Modal>
        )}
      </main>
      <section>
        <button className={styles.button} onClick={async () => await next()} disabled={requesting}>go to {page + 1}</button>
      </section>
    </div>
  )
}

export async function getServerSideProps() {
  // const allPosts = await getAll()
  return {
    props: {},
  }
}
